//문자열 메소드
//str.trim()  :  앞 뒤  공백 제거
//str.split(" ")  :  괄호 안에 있는 문자열 기준으로 단어를 쪼갬

import java.util.Scanner;

public class Main{
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		
		String str = sc.nextLine();		
		String tokens[] = str.trim().split(" ");
		System.out.println(tokens.length);
	}
}

//작성하였지만 잘 되던 중 틀리는 경우 발생하였고, 이유를 찾지 못해서 구글링을 해봄
//split 메소드의 경우에는 " " 을 한 개의 토큰으로 처리하기 때문에 trim 을 사용해서 앞 뒤 공백을 없애줬던 거였음.
//다만 입력되는 문장이 " "처럼 공백인 경우에 대해서 trim이 처리해주지 못하기 때문에 출력 값이 1이 됨.
//따라서 입력된 str이 " "인 경우에 대해 예외 처리를 해줘야 했음.

//StringTokenizer 라는 클래스를 이용하는 방법.

//차이점
//StringTokenizer : 빈 문자열을 인식하지 않음.
//Split 메소드 : 빈 문자열을 인식함.

import java.util.Scanner;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String str = sc.nextLine();
        sc.close();
        StringTokenizer st = new StringTokenizer(str, " ");
        System.out.println(st.countTokens());
    }
}
출처: https://seonghye0n.tistory.com/2 [Steadily:티스토리]

//이처럼 작성하게 된다면 예외처리를 해주지 않아도 됨.


// 빈문자열만 입력되는 경우에 대해서는 전혀 생각하지 못했다. 문제를 읽을 때 마구잡이로 푸는 것이 아니라 문제에 대해서 고민하는 시간을 가져야 한다고 생각했다.
